name: Packer Validate Syntax (Multicloud)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  security-events: write

env:
  PACKER_VERSION: "latest"

jobs:
  packer-validate:
    name: Run Packer Validate for Multi-Cloud Templates
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Packer
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: ${{ env.PACKER_VERSION }}

      - name: Run Packer Validate for Multi-Cloud Templates
        run: |
          # Initialize SARIF file
          echo '{"runs": [{"tool": {"driver": {"name": "Packer Validate", "informationUri": "https://developer.hashicorp.com/packer/docs/commands/validate"}},"results": [' > packer-results.sarif
          
          # Find all Packer template files (*.pkr.hcl) while excluding certain directories
          find . \
            -type d \( -path "./.github/workflows" -o -path "./.git" \) -prune -o \
            -name "*.pkr.hcl" -print | while read -r file; do

              # Echo which root folder is being processed (Green color, extract folder name)
              folder=$(echo "$file" | sed -E 's#^\./##; s#/.*##')
              echo -e "\e[36m[INFO] Processing folder: $folder...\e[0m"

              # Get the directory of the file
              template_dir=$(dirname "$file")

              # Initialize Packer plugins in the directory
              echo -e "\e[36m[INFO] Initializing Packer plugins in the $template_dir...\e[0m"
              packer init "$template_dir" 

              # Run syntax-only validation
              echo "\e[36m[INFO] Running the syntax validation of the $file ...\e[0m"
              validation_output=$(packer validate -syntax-only "$file" 2>&1)
              validation_status=$?

              # If validation fails, log the error message in SARIF format
              if [ $validation_status -ne 0 ]; then
                echo -e "\e[31m[ERROR] Validation failed for $file\e[0m"
                echo -e "\e[33m[WARN] Validation output: $validation_output\e[0m"
                escaped_output=$(echo "$validation_output" | jq -R -s '.')
                echo -e "\e[33m[WARN] {\"message\": {\"text\": $escaped_output}},\e[0m" >> packer-results.sarif
              else
                echo -e "\e[32m[SUCCESS]: Validation passed for $file\e[0m"
                echo -e ""
              fi
          done

          echo -e "\e[36m[INFO] Closing SARIF JSON structure and fix trailing comma issue...\e[0m"

          # Close SARIF JSON structure properly
          echo '{"message": {"text": "Validation complete"}}]}]}]' >> packer-results.sarif

          echo "DEBUG: SARIF file content:"

          # Fix trailing comma issue in the SARIF file
          sed -i '$ s/},$/}]/' packer-results.sarif

          echo -e "\e[32m[SUCCESS] Packer Validate completed successfully!\e[0m"


      - name: Upload Packer Validate results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: packer-results.sarif